{"version":3,"sources":["store/csrf.js","store/session.js","components/LoginFormPage/index.js","components/SignupFormPage/index.js","components/Navigation/ProfileButton.js","components/Navigation/index.js","App.js","store/index.js","index.js"],"names":["csrfFetch","url","a","options","method","headers","toUpperCase","Cookies","get","window","fetch","res","status","SET_USER","REMOVE_USER","setUser","user","type","payload","initialState","sessionReducer","newState","state","action","Object","assign","LoginFormPage","dispatch","useDispatch","sessionUser","useSelector","session","useState","credential","setCredential","password","setPassword","errors","setErrors","to","onSubmit","e","preventDefault","body","JSON","stringify","response","json","data","catch","map","error","idx","value","onChange","target","required","SignupFormPage","email","setEmail","username","setUsername","confirmPassword","setConfirmPassword","ProfileButton","showMenu","setShowMenu","useEffect","closeMenu","document","addEventListener","removeEventListener","onClick","class","className","Navigation","sessionLinks","isLoaded","exact","App","enhancer","setIsLoaded","then","path","rootReducer","combineReducers","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","Root","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.41b11ca2.chunk.js","sourcesContent":["// frontend/src/store/csrf.js\nimport Cookies from \"js-cookie\";\n\nexport async function csrfFetch(url, options = {}) {\n  // set options.method to 'GET' if there is no method\n  options.method = options.method || \"GET\";\n  // set options.headers to an empty object if there is no headers\n  options.headers = options.headers || {};\n\n  // if the options.method is not 'GET', then set the \"Content-Type\" header to\n  // \"application/json\", and set the \"XSRF-TOKEN\" header to the value of the\n  // \"XSRF-TOKEN\" cookie\n  if (options.method.toUpperCase() !== \"GET\") {\n    options.headers[\"Content-Type\"] =\n      options.headers[\"Content-Type\"] || \"application/json\";\n    options.headers[\"XSRF-Token\"] = Cookies.get(\"XSRF-TOKEN\");\n  }\n  // call the default window's fetch with the url and the options passed in\n  const res = await window.fetch(url, options);\n\n  // if the response status code is 400 or above, then throw an error with the\n  // error being the response\n  if (res.status >= 400) throw res;\n\n  // if the response status code is under 400, then return the response to the\n  // next promise chain\n  return res;\n}\n\n// call this to get the \"XSRF-TOKEN\" cookie, should only be used in development\nexport function restoreCSRF() {\n  return csrfFetch(\"/api/csrf/restore\");\n}\n","// frontend/src/store/session.js\nimport { csrfFetch } from \"./csrf\";\n\nconst SET_USER = \"session/setUser\";\nconst REMOVE_USER = \"session/removeUser\";\n\nconst setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: user,\n  };\n};\n\nconst removeUser = () => {\n  return {\n    type: REMOVE_USER,\n  };\n};\n\n//login!!\n\nexport const login = (user) => async (dispatch) => {\n  const { credential, password } = user;\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      credential,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\nconst initialState = { user: null };\n\nconst sessionReducer = (state = initialState, action) => {\n  let newState;\n  switch (action.type) {\n    case SET_USER:\n      newState = Object.assign({}, state);\n      newState.user = action.payload;\n      return newState;\n    case REMOVE_USER:\n      newState = Object.assign({}, state);\n      newState.user = null;\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport const restoreUser = () => async (dispatch) => {\n  const response = await csrfFetch(\"/api/session\");\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\n//signup!!\n\nexport const signup = (user) => async (dispatch) => {\n  const { username, email, password } = user;\n  const response = await csrfFetch(\"/api/users\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n  const data = await response.json();\n  dispatch(setUser(data.user));\n  return response;\n};\n\n//logout!!\nexport const logout = () => async (dispatch) => {\n  const response = await csrfFetch(\"/api/session\", {\n    method: \"DELETE\",\n  });\n  dispatch(removeUser());\n  return response;\n};\n\nexport default sessionReducer;\n","// frontend/src/components/LoginFormPage/index.js\nimport React, { useState } from \"react\";\nimport * as sessionActions from \"../../store/session\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./LoginForm.css\";\n\nfunction LoginFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [credential, setCredential] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors([]);\n    return dispatch(sessionActions.login({ credential, password })).catch(\n      async (res) => {\n        const data = await res.json();\n        if (data && data.errors) setErrors(data.errors);\n      }\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <ul>\n        {errors.map((error, idx) => (\n          <li key={idx}>{error}</li>\n        ))}\n      </ul>\n      <label>\n        Username or Email\n        <input\n          type=\"text\"\n          value={credential}\n          onChange={(e) => setCredential(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n      </label>\n      <button type=\"submit\">Log In</button>\n    </form>\n  );\n}\n\nexport default LoginFormPage;\n","// frontend/src/components/SignupFormPage/index.js\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport \"./SignupForm.css\";\n\nfunction SignupFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      setErrors([]);\n      return dispatch(\n        sessionActions.signup({ email, username, password })\n      ).catch(async (res) => {\n        const data = await res.json();\n        if (data && data.errors) setErrors(data.errors);\n      });\n    }\n    return setErrors([\n      \"Confirm Password field must be the same as the Password field\",\n    ]);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <ul>\n        {errors.map((error, idx) => (\n          <li key={idx}>{error}</li>\n        ))}\n      </ul>\n      <label>\n        Email\n        <input\n          type=\"text\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        Username\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        Password\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n      </label>\n      <label>\n        Confirm Password\n        <input\n          type=\"password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          required\n        />\n      </label>\n      <button type=\"submit\">Sign Up</button>\n    </form>\n  );\n}\n\nexport default SignupFormPage;\n","// frontend/src/components/Navigation/ProfileButton.js\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport * as sessionActions from \"../../store/session\";\n\nfunction ProfileButton({ user }) {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n\n  const openMenu = () => {\n    if (showMenu) return;\n    setShowMenu(true);\n  };\n\n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = () => {\n      setShowMenu(false);\n    };\n\n    document.addEventListener(\"click\", closeMenu);\n\n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu]);\n\n  const logout = (e) => {\n    e.preventDefault();\n    dispatch(sessionActions.logout());\n  };\n\n  return (\n    <>\n      <button onClick={openMenu}>\n        <i class=\"fas fa-user-astronaut\"></i>\n      </button>\n      {showMenu && (\n        <ul className=\"profile-dropdown\">\n          <li>{user.username}</li>\n          <li>{user.email}</li>\n          <li>\n            <button onClick={logout}>Log Out</button>\n          </li>\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default ProfileButton;\n","// frontend/src/components/Navigation/index.js\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Navigation.css\";\nimport ProfileButton from \"./ProfileButton\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nfunction Navigation({ isLoaded }) {\n  const sessionUser = useSelector((state) => state.session.user);\n\n  let sessionLinks;\n  if (sessionUser) {\n    sessionLinks = <ProfileButton user={sessionUser} />;\n  } else {\n    sessionLinks = (\n      <>\n        <NavLink to=\"/login\">Login</NavLink>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </>\n    );\n  }\n  return (\n    <ul>\n      <li>\n        <NavLink exact to=\"/\">\n          Home\n        </NavLink>\n        {isLoaded && sessionLinks}\n      </li>\n    </ul>\n  );\n}\n\nexport default Navigation;\n","// frontend/src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport LoginFormPage from \"./components/LoginFormPage\";\nimport SignupFormPage from \"./components/SignupFormPage\";\nimport * as sessionActions from \"./store/session\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(sessionActions.restoreUser()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n          <Route path=\"/login\">\n            <LoginFormPage />\n          </Route>\n          <Route path=\"/signup\">\n            <SignupFormPage />\n          </Route>\n        </Switch>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","// frontend/src/store/index.js\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport sessionReducer from \"./session\";\n\nconst rootReducer = combineReducers({\n  session: sessionReducer,\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === \"production\") {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require(\"redux-logger\").default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","// frontend/src/index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport configureStore from \"./store\";\n\nimport { restoreCSRF, csrfFetch } from \"./store/csrf\";\n\nimport * as sessionActions from \"./store/session\";\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n  restoreCSRF();\n\n  window.csrfFetch = csrfFetch;\n  window.store = store;\n  window.sessionActions = sessionActions;\n}\n\nfunction Root() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}